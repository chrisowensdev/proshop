{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","href","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","props","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","reponse","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.021c5309.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDeleleReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productReviewCreateReducer,\n    productTopRatedReducer,\n} from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n} from './reducers/userReducers';\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderDeliverReducer,\n    orderListMyReducer,\n    orderListReducer,\n} from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleleReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo'))\n    : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\n    : {};\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants';\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] };\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productDetailsReducer = (\n    state = { product: { reviews: [] } },\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state };\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload };\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productDeleleReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true };\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload };\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_CREATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload };\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} };\n        default:\n            return state;\n    }\n};\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true };\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] };\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload };\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP__REQUEST';\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP__SUCCESS';\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP__FAIL';\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const cartReducer = (\n    state = { cartItems: [], shippingAddress: {} },\n    action\n) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload;\n\n            const existItem = state.cartItems.find(\n                (x) => x.product === item.product\n            );\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((x) =>\n                        x.product === existItem.product ? item : x\n                    ),\n                };\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item],\n                };\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(\n                    (x) => x.product !== action.payload\n                ),\n            };\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload,\n            };\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\n","import {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_RESET,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_RESET,\n    USER_UPDATE_FAIL,\n} from '../constants/userConstants';\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true };\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LOGOUT:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true };\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload };\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DETAILS_RESET:\n            return { user: {} };\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload };\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true };\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload };\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LIST_RESET:\n            return { users: [] };\n        default:\n            return state;\n    }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true };\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_RESET:\n            return {\n                user: {},\n            };\n        default:\n            return state;\n    }\n};\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_REQUEST,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n} from '../constants/orderConstants';\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true,\n            };\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload,\n            };\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const orderDetailsReducer = (\n    state = { loading: true, orderItems: [], shippingAddress: {} },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload,\n            };\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true,\n            };\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            };\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        case ORDER_PAY_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true,\n            };\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            };\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        case ORDER_PAY_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true,\n            };\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            };\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        case ORDER_LIST_MY_RESET:\n            return { orders: [] };\n        default:\n            return state;\n    }\n};\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true,\n            };\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            };\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst SearchBox = ({ history }) => {\n    const [keyword, setKeyword] = useState('');\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (keyword.trim()) {\n            history.push(`/search/${keyword}`);\n        } else {\n            history.push('/');\n        }\n    };\n\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                placeholder='Search Products...'\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n            <Button type='submit' variant='outline-success' className='p-2'>\n                Search\n            </Button>\n        </Form>\n    );\n};\n\nexport default SearchBox;\n","import axios from 'axios';\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DETAILS_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n} from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const { data } = await axios.post(\n            '/api/users/login',\n            { email, password },\n            config\n        );\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    dispatch({ type: USER_LOGOUT });\n    dispatch({ type: USER_DETAILS_RESET });\n    dispatch({ type: ORDER_LIST_MY_RESET });\n    dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const { data } = await axios.post(\n            '/api/users',\n            { name, email, password },\n            config\n        );\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        });\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(`/api/users/profile`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/users`, config);\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        await axios.delete(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/users/${user._id}`,\n            user,\n            config\n        );\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        });\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport SearchBox from './SearchBox';\nimport { logout } from '../actions/userActions';\n\nconst Header = () => {\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    };\n    return (\n        <header>\n            <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>ProShop</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n                    <Navbar.Collapse id='basic-navbar-nav'>\n                        <Route\n                            render={({ history }) => (\n                                <SearchBox history={history} />\n                            )}\n                        />\n                        <Nav className='ml-auto'>\n                            <LinkContainer to='/cart'>\n                                <Nav.Link>\n                                    <i className='fas fa-shopping-cart'></i>{' '}\n                                    Cart\n                                </Nav.Link>\n                            </LinkContainer>\n                            {userInfo ? (\n                                <NavDropdown\n                                    title={userInfo.name}\n                                    id='username'\n                                >\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>\n                                            Profile\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            ) : (\n                                <LinkContainer to='login'>\n                                    <Nav.Link href='/login'>\n                                        <i className='fas fa-user'></i> Sign In\n                                    </Nav.Link>\n                                </LinkContainer>\n                            )}\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenu'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>\n                                            Users\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>\n                                            Products\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>\n                                            Orders\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>\n                        Copyright &copy; Proshop\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div className='rating'>\n            <span>\n                <i style={{color}} className={value >=1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >=2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >=3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >=4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >=5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n    <span>{text && text}</span>\n        </div>\n    )\n}\n\nRating.defaultProps = {\n    color: '#f8e825'\n}\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string\n}\n\nexport default Rating;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating';\n\nconst Product = (props) => {\n    const { product } = props;\n    return (\n        <Card className='my-3 p-3 rounded'>\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant='top' />\n            </Link>\n\n            <Card.Body>\n            <Link to={`/product/${product._id}`}>\n                <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\n            </Link>\n\n            <Card.Text as='div'>\n                <Rating \n                    value={product.rating} \n                    text={`${product.numReviews} reviews`}/>\n            </Card.Text>\n\n            <Card.Text as='h3'>\n                ${product.price}\n            </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, children }) => {\n    return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n    variant: 'info',\n};\n\nexport default Message;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                width: '100px',\n                height: '100px',\n                margin: 'auto',\n                display: 'block',\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n    return (\n        pages > 1 && (\n            <Pagination>\n                {[...Array(pages).keys()].map((x) => (\n                    <LinkContainer\n                        key={x + 1}\n                        to={\n                            !isAdmin\n                                ? keyword\n                                    ? `/search/${keyword}/page/${x + 1}`\n                                    : `/page/${x + 1}`\n                                : `/admin/productlist/${x + 1}`\n                        }\n                    >\n                        <Pagination.Item active={x + 1 === page}>\n                            {x + 1}\n                        </Pagination.Item>\n                    </LinkContainer>\n                ))}\n            </Pagination>\n        )\n    );\n};\n\nexport default Paginate;\n","import axios from 'axios';\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants';\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n    dispatch\n) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST });\n\n        const { data } = await axios.get(\n            `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n        );\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload:\n                error.reponse && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`/api/products/${id}`);\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        await axios.delete(`/api/products/${id}`, config);\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.post(`/api/products`, {}, config);\n\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/products/${product._id}`,\n            product,\n            config\n        );\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const createProductReview = (productId, review) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        await axios.post(`/api/products/${productId}/reviews`, review, config);\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST });\n\n        const { data } = await axios.get(`/api/products/top`);\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload:\n                error.reponse && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Carousel, Image } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from './Loader';\nimport Message from './Message';\nimport { listTopProducts } from '../actions/productActions';\n\nconst ProductCarousel = () => {\n    const dispatch = useDispatch();\n\n    const productTopRated = useSelector((state) => state.productTopRated);\n    const { loading, error, products } = productTopRated;\n\n    useEffect(() => {\n        dispatch(listTopProducts());\n    }, [dispatch]);\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <Carousel pause='hover' className='bg-dark'>\n            {products.map((product) => (\n                <Carousel.Item key={product._id}>\n                    <Link to={`/product/${product._id}`}>\n                        <Image src={product.image} alt={product.name} fluid />\n                        <Carousel.Caption className='carousel-caption'>\n                            <h2>\n                                {product.name} (${product.price})\n                            </h2>\n                        </Carousel.Caption>\n                    </Link>\n                </Carousel.Item>\n            ))}\n        </Carousel>\n    );\n};\n\nexport default ProductCarousel;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Meta = ({ title, description, keywords }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name='description' content={description} />\n            <meta name='keyword' content={keywords} />\n        </Helmet>\n    );\n};\n\nMeta.defaultProps = {\n    title: 'Welcome To ProShop',\n    description: 'We sell the best products for cheap',\n    keywords: 'electronics, buy electronics, cheap electronics',\n};\n\nexport default Meta;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Paginate from '../components/Paginate';\nimport { listProducts } from '../actions/productActions';\nimport ProductCarousel from '../components/ProductCarousel';\nimport Meta from '../components/Meta';\n\nconst HomeScreen = ({ match }) => {\n    const keyword = match.params.keyword;\n\n    const pageNumber = match.params.pageNumber || 1;\n\n    const dispatch = useDispatch();\n\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products, page, pages } = productList;\n\n    useEffect(() => {\n        dispatch(listProducts(keyword, pageNumber));\n    }, [dispatch, keyword, pageNumber]);\n\n    return (\n        <>\n            <Meta />\n            {!keyword ? (\n                <ProductCarousel />\n            ) : (\n                <Link to='/' className='btn btn-light'>\n                    Go Back\n                </Link>\n            )}\n            <h1>Latest Products</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <>\n                    <Row>\n                        {products.map((product) => (\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                <Product product={product} />\n                            </Col>\n                        ))}\n                    </Row>\n                    <Paginate\n                        pages={pages}\n                        page={page}\n                        keyword={keyword ? keyword : ''}\n                    />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Row,\n    Col,\n    Image,\n    ListGroup,\n    Card,\n    Button,\n    Form,\n} from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport {\n    listProductDetails,\n    createProductReview,\n} from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\n\nconst ProductScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1);\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n\n    const dispatch = useDispatch();\n\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const productReviewCreate = useSelector(\n        (state) => state.productReviewCreate\n    );\n    const {\n        success: successProductReview,\n        error: errorProductReview,\n    } = productReviewCreate;\n\n    useEffect(() => {\n        if (successProductReview) {\n            alert('Review Submitted!');\n            setRating(0);\n            setComment('');\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n        }\n        dispatch(listProductDetails(match.params.id));\n    }, [dispatch, match, successProductReview]);\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(createProductReview(match.params.id, { rating, comment }));\n    };\n\n    return (\n        <>\n            <Link className='btn btn-light my-3' to='/'>\n                Go Back\n            </Link>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <>\n                    <Meta title={product.name} />\n                    <Row>\n                        <Col md={6}>\n                            <Image\n                                src={product.image}\n                                alt={product.name}\n                                fluid\n                            />\n                        </Col>\n                        <Col md={3}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h3>{product.name}</h3>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Rating\n                                        value={product.rating}\n                                        text={`${product.numReviews} reviews`}\n                                    />\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Price: ${product.price}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Description: {product.description}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col md={3}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Price:</Col>\n                                            <Col>\n                                                <strong>\n                                                    ${product.price}\n                                                </strong>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                </ListGroup>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Status:</Col>\n                                            <Col>\n                                                {product.countInStock > 0\n                                                    ? 'In Stock'\n                                                    : 'Out of Stock'}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    {product.countInStock > 0 && (\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Qty</Col>\n                                                <Col>\n                                                    <Form.Control\n                                                        as='select'\n                                                        value={qty}\n                                                        onChange={(e) =>\n                                                            setQty(\n                                                                e.target.value\n                                                            )\n                                                        }\n                                                    >\n                                                        {[\n                                                            ...Array(\n                                                                product.countInStock\n                                                            ).keys(),\n                                                        ].map((x) => (\n                                                            <option\n                                                                key={x + 1}\n                                                                value={x + 1}\n                                                            >\n                                                                {x + 1}\n                                                            </option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    )}\n\n                                    <ListGroup.Item>\n                                        <Button\n                                            onClick={addToCartHandler}\n                                            className='btn-block'\n                                            type='button'\n                                            disabled={\n                                                product.countInStock === 0\n                                            }\n                                        >\n                                            Add To Cart\n                                        </Button>\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={6}>\n                            <h2>Reviews</h2>\n                            {product.reviews.length === 0 && (\n                                <Message>No Reviews</Message>\n                            )}\n                            <ListGroup variant='flush'>\n                                {product.reviews.map((review) => (\n                                    <ListGroup.Item key={review._id}>\n                                        <strong>{review.name}</strong>\n                                        <Rating value={review.rating} />\n                                        <p>\n                                            {review.createdAt.substring(0, 10)}\n                                        </p>\n                                        <p>{review.comment}</p>\n                                    </ListGroup.Item>\n                                ))}\n                                <ListGroup.Item>\n                                    <h2>Write a Customer Review</h2>\n                                    {errorProductReview && (\n                                        <Message variant='danger'>\n                                            {errorProductReview}\n                                        </Message>\n                                    )}\n                                    {userInfo ? (\n                                        <Form onSubmit={submitHandler}>\n                                            <Form.Group controlId='rating'>\n                                                <Form.Label>Rating</Form.Label>\n                                                <Form.Control\n                                                    as='select'\n                                                    value={rating}\n                                                    onChange={(e) =>\n                                                        setRating(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                >\n                                                    <option value=''>\n                                                        Select...\n                                                    </option>\n                                                    <option value='1'>\n                                                        1 - Poor\n                                                    </option>\n                                                    <option value='2'>\n                                                        2 - Fair\n                                                    </option>\n                                                    <option value='3'>\n                                                        3 - Good\n                                                    </option>\n                                                    <option value='4'>\n                                                        4 - Very Good\n                                                    </option>\n                                                    <option value='5'>\n                                                        5 - Excellent\n                                                    </option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                            <Form.Group id='comment'>\n                                                <Form.Label>Comment</Form.Label>\n                                                <Form.Control\n                                                    as='textarea'\n                                                    row='3'\n                                                    value={comment}\n                                                    onChange={(e) =>\n                                                        setComment(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                ></Form.Control>\n                                            </Form.Group>\n                                            <Button\n                                                type='submit'\n                                                variant='primary'\n                                            >\n                                                Submit\n                                            </Button>\n                                        </Form>\n                                    ) : (\n                                        <Message>\n                                            Please{' '}\n                                            <Link to='/login'>sign in</Link> to\n                                            write a review\n                                        </Message>\n                                    )}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default ProductScreen;\n","import axios from 'axios';\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty,\n        },\n    });\n\n    localStorage.setItem(\n        'cartItems',\n        JSON.stringify(getState().cart.cartItems)\n    );\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    });\n\n    localStorage.setItem(\n        'cartItems',\n        JSON.stringify(getState().cart.cartItems)\n    );\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    });\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    });\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Row,\n    Col,\n    ListGroup,\n    Image,\n    Form,\n    Button,\n    Card,\n} from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\n\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id;\n\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n\n    const dispatch = useDispatch();\n\n    const cart = useSelector((state) => state.cart);\n    const { cartItems } = cart;\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty));\n        }\n    }, [dispatch, productId, qty]);\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id));\n    };\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping');\n    };\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map((item) => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image\n                                            src={item.image}\n                                            alt={item.name}\n                                            fluid\n                                            rounded\n                                        />\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>\n                                            {item.name}\n                                        </Link>\n                                    </Col>\n                                    <Col md={2}>${item.price}</Col>\n                                    <Col md={2}>\n                                        <Form.Control\n                                            as='select'\n                                            value={item.qty}\n                                            onChange={(e) =>\n                                                dispatch(\n                                                    addToCart(\n                                                        item.product,\n                                                        Number(e.target.value)\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            {[\n                                                ...Array(\n                                                    item.countInStock\n                                                ).keys(),\n                                            ].map((x) => (\n                                                <option\n                                                    key={x + 1}\n                                                    value={x + 1}\n                                                >\n                                                    {x + 1}\n                                                </option>\n                                            ))}\n                                        </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button\n                                            type='button'\n                                            variant='light'\n                                            onClick={() =>\n                                                removeFromCartHandler(\n                                                    item.product\n                                                )\n                                            }\n                                        >\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>\n                                Subtotal (\n                                {cartItems.reduce(\n                                    (acc, item) => acc + item.qty,\n                                    0\n                                )}\n                                ) items\n                            </h2>\n                            $\n                            {cartItems\n                                .reduce(\n                                    (acc, item) => acc + item.qty * item.price,\n                                    0\n                                )\n                                .toFixed(2)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button\n                                type='button'\n                                className='btn-block'\n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHandler}\n                            >\n                                Proceed to Checkout\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default CartScreen;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { login } from '../actions/userActions';\n\nconst LoginScreen = ({ location, history }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect);\n        }\n    }, [history, userInfo, redirect]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    };\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer?{' '}\n                    <Link\n                        to={\n                            redirect\n                                ? `/register?redirect=${redirect}`\n                                : '/register'\n                        }\n                    >\n                        Register\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { register } from '../actions/userActions';\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector((state) => state.userRegister);\n    const { loading, error, userInfo } = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect);\n        }\n    }, [history, userInfo, redirect]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password));\n        }\n    };\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Confirm password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account?{' '}\n                    <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}\n                    >\n                        Login\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\n\nconst ProfileScreen = ({ location, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n    const { success } = userUpdateProfile;\n\n    const orderListMy = useSelector((state) => state.orderListMy);\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        } else {\n            if (!user.name) {\n                dispatch(getUserDetails('profile'));\n                dispatch(listMyOrders());\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n            }\n        }\n    }, [dispatch, history, user, userInfo]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match');\n        } else {\n            dispatch(\n                updateUserProfile({ id: user._id, name, email, password })\n            );\n        }\n    };\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {success && (\n                    <Message variant='success'>Profile Updated</Message>\n                )}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='confirmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Confirm password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                    <Table\n                        striped\n                        bordered\n                        hover\n                        responsive\n                        className='table-sm'\n                    >\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>DATE</th>\n                                <th>TOTAL</th>\n                                <th>PAID</th>\n                                <th>DELIVERED</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((order) => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>${order.totalPrice}</td>\n                                    <td>\n                                        {order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                            <i\n                                                className='fas fa-times'\n                                                style={{ color: 'red' }}\n                                            ></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        {order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                            <i\n                                                className='fas fa-times'\n                                                style={{ color: 'red' }}\n                                            ></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        <LinkContainer\n                                            to={`/order/${order._id}`}\n                                        >\n                                            <Button\n                                                className='btn-sm'\n                                                variant='light'\n                                            >\n                                                Details\n                                            </Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    );\n};\n\nexport default ProfileScreen;\n","import axios from 'axios';\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.post(`/api/orders`, order, config);\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/orders/${id}`, config);\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/orders/${orderId}/pay`,\n            paymentResult,\n            config\n        );\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver`,\n            {},\n            config\n        );\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/orders/myorders`, config);\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/orders`, config);\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Nav className='justify-fontent-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Sign In</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    );\n};\n\nexport default CheckoutSteps;\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { saveShippingAddress } from '../actions/cartActions';\n\nconst ShippingScreen = ({ history }) => {\n    const cart = useSelector((state) => state.cart);\n    const { shippingAddress } = cart;\n\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country);\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\n        history.push('/payment');\n    };\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter address'\n                        value={address}\n                        required\n                        onChange={(e) => setAddress(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter city'\n                        value={city}\n                        required\n                        onChange={(e) => setCity(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode}\n                        required\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter country'\n                        value={country}\n                        required\n                        onChange={(e) => setCountry(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default ShippingScreen;\n","import React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\n\nconst PaymentScreen = ({ history }) => {\n    const cart = useSelector((state) => state.cart);\n    const { shippingAddress } = cart;\n\n    if (!shippingAddress) {\n        history.push('/shipping');\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(savePaymentMethod(paymentMethod));\n        history.push('/placeorder');\n    };\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='PayPal'\n                            name='paymentMethod'\n                            value='PayPal'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        ></Form.Check>\n                        <Form.Check\n                            type='radio'\n                            label='Stripe'\n                            id='Stripe'\n                            name='paymentMethod'\n                            value='Stripe'\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        ></Form.Check>\n                    </Col>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default PaymentScreen;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\n\nconst PlaceOrderScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const cart = useSelector((state) => state.cart);\n\n    // Calculate prices\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    cart.itemsPrice = addDecimals(\n        cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n    cart.totalPrice = (\n        Number(cart.itemsPrice) +\n        Number(cart.shippingPrice) +\n        Number(cart.taxPrice)\n    ).toFixed(2);\n\n    const orderCreate = useSelector((state) => state.orderCreate);\n    const { order, success, error } = orderCreate;\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`);\n        }\n        // eslint-disable-next-line\n    }, [history, success]);\n\n    const placeOrderHandler = () => {\n        dispatch(\n            createOrder({\n                orderItems: cart.cartItems,\n                shippingAddress: cart.shippingAddress,\n                paymentMethod: cart.paymentMethod,\n                itemsPrice: cart.itemsPrice,\n                shippingPrice: cart.shippingPrice,\n                taxPrice: cart.taxPrice,\n                totalPrice: cart.totalPrice,\n            })\n        );\n    };\n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address:</strong>\n                                {cart.shippingAddress.address},{' '}\n                                {cart.shippingAddress.city}{' '}\n                                {cart.shippingAddress.postalCode},{' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? (\n                                <Message>Your cart is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link\n                                                        to={`/product/${item.product}`}\n                                                    >\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} X ${item.price} =\n                                                    ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && (\n                                    <Message variant='danger'>{error}</Message>\n                                )}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrderHandler}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {\n    getOrderDetails,\n    payOrder,\n    deliverOrder,\n} from '../actions/orderActions';\nimport {\n    ORDER_PAY_RESET,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants';\n\nconst OrderScreen = ({ match, history }) => {\n    const orderId = match.params.id;\n\n    const [sdkReady, setSdkReady] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const orderDetails = useSelector((state) => state.orderDetails);\n    const { order, loading, error } = orderDetails;\n\n    const orderPay = useSelector((state) => state.orderPay);\n    const { loading: loadingPay, success: successPay } = orderPay;\n\n    const orderDeliver = useSelector((state) => state.orderDeliver);\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    if (!loading) {\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2);\n        };\n\n        order.itemsPrice = addDecimals(\n            order.orderItems.reduce(\n                (acc, item) => acc + item.price * item.qty,\n                0\n            )\n        );\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n        const addPayPalScript = async () => {\n            const { data: clientId } = await axios.get('/api/config/paypal');\n            const script = document.createElement('script');\n            script.type = 'text/javascript';\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n            script.async = true;\n            script.onload = () => {\n                setSdkReady(true);\n            };\n            document.body.appendChild(script);\n        };\n        if (!order || successPay || successDeliver || order._id !== orderId) {\n            dispatch({ type: ORDER_PAY_RESET });\n            dispatch({ type: ORDER_DELIVER_RESET });\n            dispatch(getOrderDetails(orderId));\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript();\n            } else {\n                setSdkReady(true);\n            }\n        }\n    }, [\n        dispatch,\n        orderId,\n        order,\n        successPay,\n        successDeliver,\n        history,\n        userInfo,\n    ]);\n\n    const successPaymentHandler = (paymentResult) => {\n        console.log(paymentResult);\n        dispatch(payOrder(orderId, paymentResult));\n    };\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order));\n    };\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <>\n            <h1> Order {order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Name: </strong> {order.user.name}\n                            </p>\n                            <p>\n                                <strong>Email: </strong>{' '}\n                                <a href={`mailto:${order.user.email}`}>\n                                    {order.user.email}\n                                </a>\n                            </p>\n                            <p>\n                                <strong>Address:</strong>\n                                {order.shippingAddress.address},{' '}\n                                {order.shippingAddress.city}{' '}\n                                {order.shippingAddress.postalCode},{' '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? (\n                                <Message variant='success'>\n                                    Delivered on {order.deliveredAt}\n                                </Message>\n                            ) : (\n                                <Message variant='danger'>\n                                    Not Delivered\n                                </Message>\n                            )}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>\n                                    Paid on {order.paidAt}\n                                </Message>\n                            ) : (\n                                <Message variant='danger'>Not Paid</Message>\n                            )}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? (\n                                <Message>Order is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link\n                                                        to={`/product/${item.product}`}\n                                                    >\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} X ${item.price} =\n                                                    ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n                                    {!sdkReady ? (\n                                        <Loader />\n                                    ) : (\n                                        <PayPalButton\n                                            amount={order.totalPrice}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n                            {loadingDeliver && <Loader />}\n                            {userInfo &&\n                                userInfo.isAdmin &&\n                                order.isPaid &&\n                                !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default OrderScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listUsers, deleteUser } from '../actions/userActions';\n\nconst UserListScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const userList = useSelector((state) => state.userList);\n    const { loading, error, users } = userList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userDelete = useSelector((state) => state.userDelete);\n    const { success: successDelete } = userDelete;\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers());\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, history, successDelete, userInfo]);\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure')) {\n            dispatch(deleteUser(id));\n        }\n    };\n    return (\n        <>\n            <h1>Users</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>EMAIL</th>\n                            <th>ADMIN</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map((user) => (\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td>\n                                    <a href={`mailto:${user.email}`}>\n                                        {user.email}\n                                    </a>\n                                </td>\n                                <td>\n                                    {user.isAdmin ? (\n                                        <i\n                                            className='fas fa-check'\n                                            style={{ color: 'green' }}\n                                        ></i>\n                                    ) : (\n                                        <i\n                                            className='fas fa-times'\n                                            style={{ color: 'red' }}\n                                        ></i>\n                                    )}\n                                </td>\n                                <td>\n                                    <LinkContainer\n                                        to={`/admin/user/${user._id}/edit`}\n                                    >\n                                        <Button\n                                            variant='light'\n                                            className='btn-sm'\n                                        >\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n                                    <Button\n                                        variant='danger'\n                                        className='btn-sm'\n                                        onClick={() => deleteHandler(user._id)}\n                                    >\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    );\n};\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\n\nconst UserEditScreen = ({ match, history }) => {\n    const userId = match.params.id;\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userUpdate = useSelector((state) => state.userUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = userUpdate;\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET });\n            history.push('/admin/userlist');\n        } else {\n            if (!user.name || user._id !== userId) {\n                dispatch(getUserDetails(userId));\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n                setIsAdmin(user.isAdmin);\n            }\n        }\n    }, [dispatch, history, userId, user, successUpdate]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n    };\n\n    return (\n        <>\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && (\n                    <Message variant='danger'>{errorUpdate}</Message>\n                )}\n                {loading ? (\n                    <Loader />\n                ) : error ? (\n                    <Message variant='danger'>{error}</Message>\n                ) : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='name'\n                                placeholder='Enter name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                type='email'\n                                placeholder='Enter email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='isadmin'>\n                            <Form.Check\n                                type='checkbox'\n                                label='Is Admin'\n                                checked={isAdmin}\n                                onChange={(e) => setIsAdmin(e.target.checked)}\n                            ></Form.Check>\n                        </Form.Group>\n\n                        <Button type='submit' variant='primary'>\n                            Update\n                        </Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </>\n    );\n};\n\nexport default UserEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Paginate from '../components/Paginate';\nimport {\n    listProducts,\n    deleteProduct,\n    createProduct,\n} from '../actions/productActions';\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\n\nconst ProductListScreen = ({ history, match }) => {\n    const pageNumber = match.params.pageNumber || 1;\n    const dispatch = useDispatch();\n\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products, page, pages } = productList;\n\n    const productDelete = useSelector((state) => state.productDelete);\n    const {\n        loading: loadingDelete,\n        error: errorDelete,\n        success: successDelete,\n    } = productDelete;\n\n    const productCreate = useSelector((state) => state.productCreate);\n    const {\n        loading: loadingCreate,\n        error: errorCreate,\n        success: successCreate,\n        product: createdProduct,\n    } = productCreate;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET });\n\n        if (!userInfo.isAdmin) {\n            history.push('/login');\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`);\n        } else {\n            dispatch(listProducts('', pageNumber));\n        }\n    }, [\n        dispatch,\n        history,\n        userInfo,\n        successDelete,\n        successCreate,\n        createdProduct,\n        pageNumber,\n    ]);\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure')) {\n            dispatch(deleteProduct(id));\n        }\n    };\n\n    const createProductHandler = () => {\n        dispatch(createProduct());\n    };\n    return (\n        <>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i>Create Product\n                    </Button>\n                </Col>\n            </Row>\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <>\n                    <Table\n                        striped\n                        bordered\n                        hover\n                        responsive\n                        className='table-sm'\n                    >\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>NAME</th>\n                                <th>PRICE</th>\n                                <th>CATEGORY</th>\n                                <th>BRAND</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map((product) => (\n                                <tr key={product._id}>\n                                    <td>{product._id}</td>\n                                    <td>{product.name}</td>\n                                    <td>${product.price}</td>\n                                    <td>{product.category}</td>\n                                    <td>{product.brand}</td>\n                                    <td>\n                                        <LinkContainer\n                                            to={`/admin/product/${product._id}/edit`}\n                                        >\n                                            <Button\n                                                variant='light'\n                                                className='btn-sm'\n                                            >\n                                                <i className='fas fa-edit'></i>\n                                            </Button>\n                                        </LinkContainer>\n                                        <Button\n                                            variant='danger'\n                                            className='btn-sm'\n                                            onClick={() =>\n                                                deleteHandler(product._id)\n                                            }\n                                        >\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                    <Paginate pages={pages} page={page} isAdmin={true} />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default ProductListScreen;\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nconst ProductEditScreen = ({ match, history }) => {\n    const productId = match.params.id;\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [image, setImage] = useState('');\n    const [brand, setBrand] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState(0);\n    const [description, setDescription] = useState('');\n    const [uploading, setUploading] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    const productUpdate = useSelector((state) => state.productUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = productUpdate;\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET });\n            history.push('/admin/productlist');\n        } else {\n            if (!product.name || product._id !== productId) {\n                dispatch(listProductDetails(productId));\n            } else {\n                setName(product.name);\n                setPrice(product.price);\n                setImage(product.image);\n                setBrand(product.brand);\n                setCategory(product.category);\n                setCountInStock(product.countInStock);\n                setDescription(product.description);\n            }\n        }\n    }, [dispatch, history, productId, product, successUpdate]);\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0];\n        const formData = new FormData();\n        formData.append('image', file);\n        setUploading(true);\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            };\n\n            const { data } = await axios.post('/api/upload', formData, config);\n\n            setImage(data);\n            setUploading(false);\n        } catch (error) {\n            console.error(error);\n            setUploading(false);\n        }\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(\n            updateProduct({\n                _id: productId,\n                name,\n                price,\n                brand,\n                category,\n                description,\n                countInStock,\n                image,\n            })\n        );\n    };\n\n    return (\n        <>\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && (\n                    <Message variant='danger'>{errorUpdate}</Message>\n                )}\n                {loading ? (\n                    <Loader />\n                ) : error ? (\n                    <Message variant='danger'>{error}</Message>\n                ) : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='name'\n                                placeholder='Enter name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='price'>\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control\n                                type='number'\n                                placeholder='Enter price'\n                                value={price}\n                                onChange={(e) => setPrice(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='image'>\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter image url'\n                                value={image}\n                                onChange={(e) => setImage(e.target.value)}\n                            ></Form.Control>\n                            <Form.File\n                                id='image-file'\n                                label='Choose File'\n                                custom\n                                onChange={uploadFileHandler}\n                            ></Form.File>\n                            {uploading && <Loader />}\n                        </Form.Group>\n\n                        <Form.Group controlId='brand'>\n                            <Form.Label>Brand</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter brand'\n                                value={brand}\n                                onChange={(e) => setBrand(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='countInStock'>\n                            <Form.Label>Count In Stock</Form.Label>\n                            <Form.Control\n                                type='number'\n                                placeholder='Enter countInStock'\n                                value={countInStock}\n                                onChange={(e) =>\n                                    setCountInStock(e.target.value)\n                                }\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='category'>\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter category'\n                                value={category}\n                                onChange={(e) => setCategory(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='description'>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter description'\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Button type='submit' variant='primary'>\n                            Update\n                        </Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </>\n    );\n};\n\nexport default ProductEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listOrders } from '../actions/orderActions';\n\nconst OrderListScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const orderList = useSelector((state) => state.orderList);\n    const { loading, error, orders } = orderList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders());\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, history, userInfo]);\n\n    return (\n        <>\n            <h1>Orders</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>USER</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>DELIVERED</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map((order) => (\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.user && order.user.name}</td>\n                                <td>{order.createdAt.substring(0, 10)}</td>\n                                <td>${order.totalPrice}</td>\n                                <td>\n                                    {order.isPaid ? (\n                                        order.paidAt.substring(0, 10)\n                                    ) : (\n                                        <i\n                                            className='fas fa-times'\n                                            style={{ color: 'red' }}\n                                        ></i>\n                                    )}\n                                </td>\n                                <td>\n                                    {order.isDelivered ? (\n                                        order.deliveredAt.substring(0, 10)\n                                    ) : (\n                                        <i\n                                            className='fas fa-times'\n                                            style={{ color: 'red' }}\n                                        ></i>\n                                    )}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n                                        <Button\n                                            variant='light'\n                                            className='btn-sm'\n                                        >\n                                            Details\n                                        </Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    );\n};\n\nexport default OrderListScreen;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n    return (\n        <Router>\n            <Header />\n            <main className='py-3'>\n                <Container>\n                    <Route path='/order/:id' component={OrderScreen} />\n                    <Route path='/shipping' component={ShippingScreen} />\n                    <Route path='/payment' component={PaymentScreen} />\n                    <Route path='/placeorder' component={PlaceOrderScreen} />\n                    <Route path='/login' component={LoginScreen} />\n                    <Route path='/register' component={RegisterScreen} />\n                    <Route path='/profile' component={ProfileScreen} />\n                    <Route path='/product/:id' component={ProductScreen} />\n                    <Route path='/cart/:id?' component={CartScreen} />\n                    <Route path='/admin/userlist' component={UserListScreen} />\n                    <Route\n                        path='/admin/user/:id/edit'\n                        component={UserEditScreen}\n                    />\n                    <Route\n                        path='/admin/productlist'\n                        component={ProductListScreen}\n                        exact\n                    />\n                    <Route\n                        path='/admin/productlist/:pageNumber'\n                        component={ProductListScreen}\n                        exact\n                    />\n                    <Route\n                        path='/admin/product/:id/edit'\n                        component={ProductEditScreen}\n                    />\n                    <Route\n                        path='/admin/orderlist'\n                        component={OrderListScreen}\n                    />\n                    <Route\n                        path='/search/:keyword'\n                        component={HomeScreen}\n                        exact\n                    />\n                    <Route path='/page/:pageNumber' component={HomeScreen} />\n                    <Route\n                        path='/search/:keyword/page/:pageNumber'\n                        component={HomeScreen}\n                        exact\n                    />\n                    <Route path='/' component={HomeScreen} exact />\n                </Container>\n            </main>\n            <Footer />\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}